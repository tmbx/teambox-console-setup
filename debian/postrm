#!/bin/bash

set -e

# summary of how this script can be called:
#        * <postrm> `remove'
#        * <postrm> `purge'
#        * <old-postrm> `upgrade' <new-version>
#        * <new-postrm> `failed-upgrade' <old-version>
#        * <new-postrm> `abort-install'
#        * <new-postrm> `abort-install' <old-version>
#        * <new-postrm> `abort-upgrade' <old-version>
#        * <disappearer's-postrm> `disappear' <overwriter>
#          <overwriter-version>
# for details, see http://www.debian.org/doc/debian-policy/ or
# the debian-policy package


# Clean up the VM.
function clean_vm {
    purge="$1"
    
    if [ "$purge" = "1" ]; then
        
        # Drop the Teambox cluster if required.
        if [ -d "/var/lib/postgresql/8.4/teambox" ]; then
            echo "Dropping Postgres Teambox cluster"
            pg_dropcluster --stop 8.4 teambox
        fi
        
    fi
        
    # Remove the startup scripts.
    update-rc.d -f sethostkeys.sh remove
    update-rc.d -f regencerts.sh remove
    update-rc.d -f iptables.sh remove
}


# This function removes a UNIX user, if it exists.
function delete_one_user {
    if getent passwd $1 > /dev/null; then
	userdel -f $1
    fi
}

# This function adds a UNIX user with the home and shell specified.
function add_one_user {
    useradd -d $2 -s $3 -p '' -u 0 -g 0 -o $1
}

# Standard klogin users.
klogin_users="setup info maintenance production update debug"

# This function removes all the Teambox special users.
function delete_all_users {
    for user in $klogin_users; do delete_one_user $user; done
    delete_one_user login
}

# This function adds all the Teambox special users.
function add_all_users {
    for user in $klogin_users; do add_one_user $user / usr/bin/klogin_$user; done
    add_one_user login /root /bin/bash
}

case "$1" in
    purge|remove|upgrade|failed-upgrade|abort-install|abort-upgrade|disappear)
        purge=0
        if [ "$1" = "purge" ]; then purge=1; fi
        
        clean_vm $1
	delete_all_users
    	;;

    *)
        echo "postrm called with unknown argument \`$1'" >&2
        exit 1
    	;;
esac

# dh_installdeb will replace this with shell code automatically
# generated by other debhelper scripts.

#DEBHELPER#

